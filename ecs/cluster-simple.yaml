AWSTemplateFormatVersion: "2010-09-09"
Description: This template deploys a simple ECS cluster

Parameters:
  Environment:
    Description: An environment name that will be prefixed to resource names
    Type: String
    AllowedValues:
      - prod
      - stag
      - dev
    ConstraintDescription: invalid environment, only [prod, stag, dev] are allowed
  Appname:
    Type: String
  ExportParameters:
    Description: This template allows you to export SSM parameters
    Default: false
    Type: String
    AllowedValues: [ true, false ]
  AllowContainersInsights:
    Description: Enable containers insights for this cluster
    Default: false
    Type: String
    AllowedValues: [ true, false ]
  AllowECSAnywhere:
    Description: Enable ECS anywhere for this cluster
    Default: false
    Type: String
    AllowedValues: [ true, false ]

Conditions:
  IsProduction: !Equals [ !Ref Environment, prod ]
  ShouldCreateParameters: !Equals [ true, !Ref ExportParameters ]
  ShouldAllowContainersInsights: !Equals [ true, !Ref AllowContainersInsights ]
  ShouldAllowECSAnywhere: !Equals [ true, !Ref AllowECSAnywhere ]
  ShouldAllowECSAnywhereAndExportParameters: !And [ Condition: ShouldAllowECSAnywhere, Condition: ShouldCreateParameters]

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}
      ClusterSettings:
        - Name: containerInsights
          Value: !If [ ShouldAllowContainersInsights, enabled, disabled ]
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: compute
        - Key: description
          Value: ECS cluster

  ECSAnywhereRole:
    Type: AWS::IAM::Role
    Condition: ShouldAllowECSAnywhere
    Properties:
      Path: /
      RoleName: !Sub ${AWS::StackName}-ECSAnywhereRole
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                    "Service": "ssm.amazonaws.com"
                }
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Tags:
        - Key: app
          Value: !Ref Appname
        - Key: env
          Value: !Ref Environment
        - Key: type
          Value: security
        - Key: description
          Value: Role for ECS Anywhere

  # PARAMETERS ==================
  ClusterArn:
    Type: AWS::SSM::Parameter
    Condition: ShouldCreateParameters
    Properties:
      Name: !Sub /${AWS::StackName}/cluster/arn
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: Cluster arn
      Type: String
      Value: !GetAtt ECSCluster.Arn

  ECSAnywhereRoleArn:
    Type: AWS::SSM::Parameter
    Condition: ShouldAllowECSAnywhereAndExportParameters
    Properties:
      Name: !Sub /${AWS::StackName}/ecs-anywhere-role/arn
      Tags:
        app: !Ref Appname
        env: !Ref Environment
        type: parameter
        description: ECS Anywhere role arn
      Type: String
      Value: !GetAtt ECSAnywhereRole.Arn

Outputs:
  ClusterArn:
    Description: ECS cluster arn
    Value: !GetAtt ECSCluster.Arn
  ECSAnywhereRoleArn:
    Description: ECS anywhere role arn
    Value: !GetAtt ECSAnywhereRole.Arn